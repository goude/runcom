#!/usr/bin/bash

command_exists () {
    type "$1" &> /dev/null ;
}

# Pull all git repos one level below current directory
pullall () {
    find . -type d -depth 1 -exec git --git-dir={}/.git --work-tree="$PWD"/{} pull origin master \; ;
}

# Deduplicate path variables
get_var () { eval "echo \$$1" ; }
set_var () { eval "$1=\"$2\"" ; }
dedup_pathvar () {
    pathvar_name="$1"
    pathvar_value="$(get_var $pathvar_name)"
    deduped_path="$(echo -n $pathvar_value | perl -e 'print join(":",grep { not $seen{$_}++ } split(/:/, scalar <>))')"
    set_var $pathvar_name "$deduped_path"
}

# Prompt functions
git_user_name_prompt () {
    git config user.email | sed 's/\(.\).\+@\(.\).\+/\1@\2/'
}

# Misc
history-high-score () {
    history | awk '{print $2}' | awk 'BEGIN {FS="|"} {print $1}' | sort | uniq -c | sort
}

reload-bashrc () {
    source ~/.bashrc
}

reload-zshrc () {
    source ~/.zshrc
}

random-base16-colorscheme () {
  pushd . > /dev/null && \
  cd "$HOME/.local/share/base16/templates/shell/scripts" && \
  foo=$(ls *.sh | shuf | head -1) && \
  echo $foo && \
  source $foo && \
  popd > /dev/null
}

save () {
  if [ -z ${1+x} ]; then
		echo "Missing commit message.";
	else
		git commit -a -m "$1" && git push && git status;
	fi
}

function center-text() {
  #colcount=$((`tput cols` - 1))
  colcount=$(($COLUMNS - 3))
  sed  -e :a -e "s/^.\{1,$colcount\}$/ & /;ta"
  unset colcount
}

n () {
  if [ $# -eq 0 ]
    then
      nvim "$(fzf)"
    else
      nvim "$@"
  fi
}
