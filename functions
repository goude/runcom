#!/usr/bin/bash

command_exists () {
    type "$1" &> /dev/null ;
}

# Pull all git repos one level below current directory
pullall () {
    find . -type d -depth 1 -exec git --git-dir={}/.git --work-tree="$PWD"/{} pull origin master \; ;
}

# Deduplicate path variables
get_var () { eval "echo \$$1" ; }
set_var () { eval "$1=\"$2\"" ; }
dedup_pathvar () {
    pathvar_name="$1"
    pathvar_value="$(get_var $pathvar_name)"
    deduped_path="$(echo -n $pathvar_value | perl -e 'print join(":",grep { not $seen{$_}++ } split(/:/, scalar <>))')"
    set_var $pathvar_name "$deduped_path"
}

# Prompt functions
git_user_name_prompt () {
    git config user.email | sed 's/\(.\).\+@\(.\).\+/\1@\2/'
}

get_extended_prompt_string () {
    [[ -f ~/.homesick/repos/runcom/prompt/prompt.py ]] && python ~/.homesick/repos/runcom/prompt/prompt.py
}

# Misc
history-high-score () {
    history 0 | awk '{print $2}' | awk 'BEGIN {FS="|"} {print $1}' | sort | uniq -c | sort
}

base16-random-colorscheme () {
  randscheme=$(ls "$HOMESHICK_REPOS"/base16-shell/*.sh | gshuf -n 1)
  echo $randscheme
  source $randscheme
  unset randscheme
}
