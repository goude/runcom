" Preamble {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
" }

" Unbundling {
" Unbundle certain plugins
UnBundle "spf13/vim-preview"
"UnBundle "spf13/vim-autoclose"
" }

" Personalized mappings {
" Quickly edit/reload the vimrc file
nnoremap <silent> <leader>ev :e ~/.vimrc.fork<CR>
nnoremap <silent> <leader>et :e $HOME/.tmux.conf<CR>
map <silent> <leader>r :source $MYVIMRC<CR>:filetype detect<CR>:exe ":echo $MYVIMRC 'reloaded'"<CR>

" Reduce finger movement for Esc
inoremap jk <Esc>

" Switch between buffers
map <up> :bp<CR>
map <down> :bn<CR>

" Mappings to move lines
" http://vim.wikia.com/wiki/VimTip646
"nnoremap ˙ <<
"nnoremap ¬ >>
"inoremap ˙ <<
"inoremap ¬ >>
"vnoremap ˙ <<
"vnoremap ¬ >>

"nnoremap <A-h> <<
"nnoremap <A-l> >>
"inoremap <A-h> <<
"inoremap <A-l> >>
"vnoremap <A-h> <<
"vnoremap <A-l> >>

"nnoremap ∆ :m .+1<CR>==
"nnoremap ˚ :m .-2<CR>==
"inoremap ∆ <Esc>:m .+1<CR>==gi
"inoremap ˚ <Esc>:m .-2<CR>==gi
"vnoremap ∆ :m '>+1<CR>gv=gv
"vnoremap ˚ :m '<-2<CR>gv=gv

"nnoremap <A-j> :m .+1<CR>==
"nnoremap <A-k> :m .-2<CR>==
"inoremap <A-j> <Esc>:m .+1<CR>==gi
"inoremap <A-k> <Esc>:m .-2<CR>==gi
"vnoremap <A-j> :m '>+1<CR>gv=gv
"vnoremap <A-k> :m '<-2<CR>gv=gv

" Save with Ctrl-s
map <C-s> :w<cr>
imap <C-s> <ESC>:w<cr>

" C-j removes previous character and inserts a newline (in test, needs tweaking)
nnoremap <C-j> gElr<CR>h

" Use very magic regexps by default
nnoremap / /\v
cnoremap %s/ %s/\v

" Press space to move quickly on a line
"nmap <Space> <Plug>(easymotion-jumptoanywhere)
nmap <Left> <Plug>(easymotion-jumptoanywhere)
nmap <Right> <Plug>(easymotion-jumptoanywhere)

nmap <Space> za

" }

" Vim settings {

" Turn off spellcheck by default; it's annoying
set nospell

" Tab settings
autocmd FileType javascript setlocal expandtab shiftwidth=2 softtabstop=2
autocmd FileType html setlocal expandtab shiftwidth=2 softtabstop=2
" }

" Global and plugin settings {

" Disable autoclose
" Update: auto-pairs was the culprit; use C-V ' to insert single quotes
" Update 2: probably misdiagnosed, so disabling.
"let g:autoclose_on = 0

" Increase html indenting
let g:html_indent_inctags = "html,body,head,tbody"

" Hide indent guides
let g:indent_guides_enable_on_vim_startup = 0

let g:syntastic_html_tidy_ignore_errors = [
    \" proprietary attribute \"ng-",
    \"trimming empty <i>",
    \"trimming empty <span>",
    \"<input> proprietary attribute \"autocomplete\"",
    \"proprietary attribute \"role\"",
    \"proprietary attribute \"hidden\"",
\]

let g:instant_markdown_autostart = 0

" haskellmode-vim
let g:haddock_browser = "open"
let g:haddock_browser_callformat = "%s %s"

" Hardtime configuration
let g:hardtime_default_on = 1
let g:hardtime_maxcount = 4

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" 'Varför fungerar inte å i vim?'
" Fix problem with <M-e> conflict (symptom: unable to type Swedish char å)
let g:AutoPairsShortcutFastWrap = ''

" UltiSnips settings
let g:UltiSnipsSnippetsDir        = '~/.vim/UltiSnips/'
"let g:UltiSnipsExpandTrigger       = '<c-j>'

" }

" Writing settings {

function! s:goyo_enter()
  silent !tmux set status off
  set nocursorline
  set noshowmode
  set noshowcmd
  set nonumber
  set norelativenumber
  set scrolloff=999
  NumbersDisable
  Limelight
  " ...
endfunction

function! s:goyo_leave()
  silent !tmux set status on
  set cursorline
  set showmode
  set showcmd
  set scrolloff=5
  Limelight!
  NumbersEnable
  " ...
endfunction

autocmd! User GoyoEnter nested call <SID>goyo_enter()
autocmd! User GoyoLeave nested call <SID>goyo_leave()

" }

" Theming settings {
if has("gui_running")
    set guioptions-=m  "remove menu bar
    set guioptions-=T  "remove toolbar
    set guioptions-=r  "remove right-hand scroll bar
    set guioptions-=L  "remove left-hand scroll bar
    set gfn=InputMono\ Thin:h18
    let g:airline_powerline_fonts = 1
else
    let base16colorspace=256
endif

"set background=dark
"color base16-monokai

let g:thematic#themes = {
\ 'goude'      : { 'colorscheme': 'base16-monokai',
\                  'airline-theme': 'base16color',
\                  'background': 'dark',
\                },
\ 'iawriter'   : { 'colorscheme': 'pencil',
\                  'background': 'light',
\                  'columns': 75,
\                  'font-size': 20,
\                  'fullscreen': 1,
\                  'laststatus': 0,
\                  'linespace': 8,
\                  'typeface': 'Cousine',
\                },
\ }

let g:thematic#theme_name = 'goude'

" <c-l> to clear the highlight, as well as redraw the screen
noremap <silent> <C-l> :<C-u>nohlsearch<cr><C-l>
inoremap <silent> <C-l> <C-o>:nohlsearch<cr>

" }

" System settings {

if OSX()
    " editorconfig
    let g:EditorConfig_core_mode = 'external_command'
endif

" Set font on Windows/portable gvim
if WINDOWS()
    set guifont=Ubuntu_Mono_derivative_Powerlin:h12
endif

if LINUX()
    " Do nothing.
endif

"autocmd VimEnter * echo "C-V ' to disable auto-pairs temporarily."

" }

" Startify {

autocmd User Startified setlocal cursorline

let g:startify_enable_special         = 0
let g:startify_files_number           = 8
let g:startify_relative_path          = 1
let g:startify_change_to_dir          = 1
let g:startify_update_oldfiles        = 1
let g:startify_session_autoload       = 1
let g:startify_session_persistence    = 1
let g:startify_session_delete_buffers = 1

let g:startify_list_order = [
  \ ['   LRU:'],
  \ 'files',
  \ ['   LRU within this dir:'],
  \ 'dir',
  \ ['   Sessions:'],
  \ 'sessions',
  \ ['   Bookmarks:'],
  \ 'bookmarks',
  \ ]

let g:startify_skiplist = [
            \ 'COMMIT_EDITMSG',
            \ 'bundle/.*/doc',
            \ '/data/repo/neovim/runtime/doc',
            \ '/Users/mhi/local/vim/share/vim/vim74/doc',
            \ ]

let g:startify_bookmarks = [
            \ '~/git',
            \ ]

let g:startify_custom_indices = map(range(1,100), 'string(v:val)')

let g:startify_custom_footer =
      \ ['', "   Vim is charityware. Please read ':help uganda'.", '']

let g:startify_custom_header =
        \ map(split(system('FORTUNE_PATH=~/.homesick/repos/runcom/adages ~/bin/adage | cowsay'), '\n'), '"   ". v:val')


" }
