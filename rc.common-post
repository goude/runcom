#!/usr/bin/env bash

# OS specific settings
if [[ $system == 'Linux' ]]; then
    alias ls='ls -h --color=auto'
    alias rm='rm -I'
    alias grep='grep --color=auto'
    alias egrep='egrep --color=auto'
    alias fgrep='fgrep --color=auto'

    if [[ -n "$DISPLAY" ]]; then
        setxkbmap -option ctrl:nocaps
    fi
fi

if [[ $system == 'OSX' ]]; then
    export CLICOLOR=1
    #export LSCOLORS="gxfxcxdxbxegedabagacad"

    if [[ -x /usr/local/bin/gls ]]; then
        alias ls='/usr/local/bin/gls -h --color=auto'
    else
        alias ls='ls -hG'
    fi

    export LANG=en_US.UTF-8
    export LC_CTYPE=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
fi

#if [[ $system == 'Cygwin' ]]; then
#fi

#if [ -n "$ZSH_VERSION" ]; then
   # assume Zsh
   #alias hi='history 0'
#elif [ -n "$BASH_VERSION" ]; then
   # assume Bash
   #alias hi='history'
#else
   #alias hi='history'
#fi

# Directory colors
if [[ -f ~/.dircolors && ( -x /usr/local/bin/dircolors || -x /usr/bin/dircolors ) ]]; then
    eval `dircolors $HOME/.dircolors`
fi
if [[ -f ~/.dircolors && ( -x /usr/local/bin/gdircolors ) ]]; then
    eval `gdircolors $HOME/.dircolors`
fi

# generic colou?ri[sz]er
source $rcfiles/home/.grc/grc.bashrc

# Wrapper for virtualenv
if [[ -f /usr/share/virtualenvwrapper/virtualenvwrapper.sh ]]; then
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
elif [[ -f /usr/local/bin/virtualenvwrapper.sh ]]; then
    source /usr/local/bin/virtualenvwrapper.sh
fi

# Proxy helper
if [[ -f $HOME/.homesick/repos/yaprox/yaprox.sh ]]; then
    source $HOME/.homesick/repos/yaprox/yaprox.sh
fi

# SSH_AUTH_SOCK
#if [[ -e ~/.ssh/ssh_auth_sock ]]; then
#    export SSH_AUTH_SOCK=$HOME/.ssh/ssh_auth_sock
#fi

# Turn off Ctrl-s XOFF
# Commented out pending further investigation (x key stopped working)
stty ixany
stty ixoff -ixon
stty stop undef
stty start undef
# http://unix.stackexchange.com/questions/72086/ctrl-s-hang-terminal-emulator
#stty ixon

# Base16 Shell
BASE16_SHELL="$homeshick_repos/base16-shell/"
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

# custom functions
source $rcfiles/functions

# fasd navigator
eval "$(fasd --init auto)"

# Tmux improver
if [[ -d $HOME/.homesick/repos/tmuxifier/bin ]]; then
  export TMUXIFIER_LAYOUT_PATH="$HOME/.tmux-layouts"
  PATH=$PATH:$HOME/.homesick/repos/tmuxifier/bin
  command_exists tmux && eval "$(tmuxifier init -)"
fi

# custom aliases
source $rcfiles/aliases

# Source local settings
if [ -f ~/.localenv ]; then
    source ~/.localenv
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

unset rcfiles
unset system
unset homeshick_repos
